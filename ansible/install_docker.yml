- hosts: all
  remote_user: root
  become: yes
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64

  tasks:
  - name: Update apt packages
    apt:
      update_cache: yes
      upgrade: yes

  - name: Install required packages
    apt:
      pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common

  - name: Create directory for Docker's GPG key
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Add Docker's official GPG key
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      keyring: /etc/apt/keyrings/docker.gpg
      state: present

  - name: Print architecture variables
    debug:
      msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

  - name: Add Docker repository
    apt_repository:
      repo: >-
        deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
        signed-by=/etc/apt/keyrings/docker.gpg]
        https://download.docker.com/linux/debian {{ ansible_lsb.codename }} stable
      filename: docker
      state: present

  - name: Update apt packages
    apt:
      update_cache: yes
      upgrade: yes

  - name: Install Docker and related packages
    apt:
      name: "{{ item }}"
      state: present
      update_cache: true
    loop:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

  - name: Enable and start Docker services
    systemd:
      name: "{{ item }}"
      enabled: true
      state: started
    loop:
      - docker.service
      - containerd.service
  
  
